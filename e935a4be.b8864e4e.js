(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{91:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return u})),n.d(t,"metadata",(function(){return d})),n.d(t,"rightToc",(function(){return b})),n.d(t,"default",(function(){return f}));var r=n(2),o=n(6),i=n(0),a=n.n(i),c=n(94);n(7);function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function p(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var s=function(e){function t(){return l(this,t),p(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.componentDidMount=function(){this._updateIframeContent()},t.prototype.componentDidUpdate=function(e,t){this._updateIframeContent()},t.prototype._defineUrl=function(){var e=this.props,t=e.id,n=e.file;return"https://gist.github.com/"+t+".js"+(n?"?file="+n:"")},t.prototype._updateIframeContent=function(){var e=this.props,t=e.id,n=e.file,r=this.iframeNode,o=r.document;r.contentDocument?o=r.contentDocument:r.contentWindow&&(o=r.contentWindow.document);var i='<html><head><base target="_parent"><style>*{font-size:12px;}</style></head><body '+("onload=\"parent.document.getElementById('"+(n?"gist-"+t+"-"+n:"gist-"+t)+"').style.height=document.body.scrollHeight + 'px'\"")+">"+('<script type="text/javascript" src="'+this._defineUrl()+'"><\/script>')+"</body></html>";o.open(),o.writeln(i),o.close()},t.prototype.render=function(){var e=this,t=this.props,n=t.id,r=t.file;return a.a.createElement("iframe",{ref:function(t){e.iframeNode=t},width:"100%",frameBorder:0,id:r?"gist-"+n+"-"+r:"gist-"+n})},t}(a.a.PureComponent),u={id:"pymolrc",title:"My .pymolrc file"},d={unversionedId:"lab-notes/virtual/pymol/pymolrc",id:"lab-notes/virtual/pymol/pymolrc",isDocsHomePage:!1,title:"My .pymolrc file",description:"Objective",source:"@site/docs/lab-notes/virtual/pymol/pymolrc.md",slug:"/lab-notes/virtual/pymol/pymolrc",permalink:"/docs/lab-notes/virtual/pymol/pymolrc",editUrl:"https://github.com/eternal-flame-AD/vds-yumechi-top/edit/master/docs/lab-notes/virtual/pymol/pymolrc.md",version:"current",sidebar:"someSidebar",previous:{title:"Lab Notes Index",permalink:"/docs/lab-notes/"},next:{title:"GOLD Convenient Scripts",permalink:"/docs/lab-notes/virtual/gold/convenient-scripts"}},b=[{value:"Objective",id:"objective",children:[]},{value:"Features",id:"features",children:[]},{value:"TODO",id:"todo",children:[]},{value:"pymolrc.pml code",id:"pymolrcpml-code",children:[]}],m={rightToc:b};function f(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"objective"},"Objective"),Object(c.b)("p",null,"This is a running record of my pymolrc file to extend pyMOL functionalities by adding shortcuts that\nI like to use or to facitilate automation of some repetitive VDS work."),Object(c.b)("h2",{id:"features"},"Features"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},'Adjust rendering mode to "modern" - fancier graphics.'),Object(c.b)("li",{parentName:"ul"},"Load object properties (like GOLD results) by default."),Object(c.b)("li",{parentName:"ul"},"Extended commands:",Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"stereoize")," use anaglyph stereo and adjust background to grey for better depth perception."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"mkactive")," shortcut for ",Object(c.b)("inlineCode",{parentName:"li"},"around -> byres -> & protein"),' selector chain for "make a selection of active sites" like questions.'),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"mkpolconts")," shortcut for ",Object(c.b)("inlineCode",{parentName:"li"},"find polcont, prot, lig, mode=2"),' for "find the polar contacts between ligand and protein" questions, also counts polar contacts for you.'),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"split_prot_by_aa_type")," for making protein selections based on AA types (hyfo, pol, etc.)"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"label_ca")," shortcut for labeling carbon alpha atoms with ",Object(c.b)("inlineCode",{parentName:"li"},"resn + resi"))))),Object(c.b)("h2",{id:"todo"},"TODO"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Ray tracing with RPC (something like send viewport to remote PyMOL server, ray, download image)."),Object(c.b)("li",{parentName:"ul"},"Extended commands:",Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"gold_score")," parse gold scores from gold solution file."),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"desc_iface")," single-command solution for describing a molecule-molecule interface. (Pre-initialized scenes of polar contacts, interface residues, etc.)")))),Object(c.b)("h2",{id:"pymolrcpml-code"},"pymolrc.pml code"),Object(c.b)(s,{id:"06051631b7fef05a678bfc05c7ea045e",mdxType:"Gist"}))}f.isMDXComponent=!0},94:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=o.a.createContext({}),s=function(e){var t=o.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),b=r,m=u["".concat(a,".").concat(b)]||u[b]||d[b]||i;return n?o.a.createElement(m,c(c({ref:t},p),{},{components:n})):o.a.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var p=2;p<i;p++)a[p]=n[p];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);